module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.12). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateBlock {
  count: Int!
}

type AggregateTransaction {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Block {
  id: ID!
  number: Int!
  hash: String!
  parentHash: String!
  baseFeePerGas: Int
  nonce: String!
  sha3Uncles: String
  logsBloom: String
  transactionRoot: String
  stateRoot: String
  miner: String!
  difficulty: String!
  totalDifficulty: String!
  extraData: String
  size: Int
  gasLimit: Int
  gasUsed: Int
  timestamp: Int!
  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction!]
  uncles: [String!]!
}

type BlockConnection {
  pageInfo: PageInfo!
  edges: [BlockEdge]!
  aggregate: AggregateBlock!
}

input BlockCreateInput {
  id: ID
  number: Int!
  hash: String!
  parentHash: String!
  baseFeePerGas: Int
  nonce: String!
  sha3Uncles: String
  logsBloom: String
  transactionRoot: String
  stateRoot: String
  miner: String!
  difficulty: String!
  totalDifficulty: String!
  extraData: String
  size: Int
  gasLimit: Int
  gasUsed: Int
  timestamp: Int!
  transactions: TransactionCreateManyInput
  uncles: BlockCreateunclesInput
}

input BlockCreateunclesInput {
  set: [String!]
}

type BlockEdge {
  node: Block!
  cursor: String!
}

enum BlockOrderByInput {
  id_ASC
  id_DESC
  number_ASC
  number_DESC
  hash_ASC
  hash_DESC
  parentHash_ASC
  parentHash_DESC
  baseFeePerGas_ASC
  baseFeePerGas_DESC
  nonce_ASC
  nonce_DESC
  sha3Uncles_ASC
  sha3Uncles_DESC
  logsBloom_ASC
  logsBloom_DESC
  transactionRoot_ASC
  transactionRoot_DESC
  stateRoot_ASC
  stateRoot_DESC
  miner_ASC
  miner_DESC
  difficulty_ASC
  difficulty_DESC
  totalDifficulty_ASC
  totalDifficulty_DESC
  extraData_ASC
  extraData_DESC
  size_ASC
  size_DESC
  gasLimit_ASC
  gasLimit_DESC
  gasUsed_ASC
  gasUsed_DESC
  timestamp_ASC
  timestamp_DESC
}

type BlockPreviousValues {
  id: ID!
  number: Int!
  hash: String!
  parentHash: String!
  baseFeePerGas: Int
  nonce: String!
  sha3Uncles: String
  logsBloom: String
  transactionRoot: String
  stateRoot: String
  miner: String!
  difficulty: String!
  totalDifficulty: String!
  extraData: String
  size: Int
  gasLimit: Int
  gasUsed: Int
  timestamp: Int!
  uncles: [String!]!
}

type BlockSubscriptionPayload {
  mutation: MutationType!
  node: Block
  updatedFields: [String!]
  previousValues: BlockPreviousValues
}

input BlockSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BlockWhereInput
  AND: [BlockSubscriptionWhereInput!]
  OR: [BlockSubscriptionWhereInput!]
  NOT: [BlockSubscriptionWhereInput!]
}

input BlockUpdateInput {
  number: Int
  hash: String
  parentHash: String
  baseFeePerGas: Int
  nonce: String
  sha3Uncles: String
  logsBloom: String
  transactionRoot: String
  stateRoot: String
  miner: String
  difficulty: String
  totalDifficulty: String
  extraData: String
  size: Int
  gasLimit: Int
  gasUsed: Int
  timestamp: Int
  transactions: TransactionUpdateManyInput
  uncles: BlockUpdateunclesInput
}

input BlockUpdateManyMutationInput {
  number: Int
  hash: String
  parentHash: String
  baseFeePerGas: Int
  nonce: String
  sha3Uncles: String
  logsBloom: String
  transactionRoot: String
  stateRoot: String
  miner: String
  difficulty: String
  totalDifficulty: String
  extraData: String
  size: Int
  gasLimit: Int
  gasUsed: Int
  timestamp: Int
  uncles: BlockUpdateunclesInput
}

input BlockUpdateunclesInput {
  set: [String!]
}

input BlockWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  number: Int
  number_not: Int
  number_in: [Int!]
  number_not_in: [Int!]
  number_lt: Int
  number_lte: Int
  number_gt: Int
  number_gte: Int
  hash: String
  hash_not: String
  hash_in: [String!]
  hash_not_in: [String!]
  hash_lt: String
  hash_lte: String
  hash_gt: String
  hash_gte: String
  hash_contains: String
  hash_not_contains: String
  hash_starts_with: String
  hash_not_starts_with: String
  hash_ends_with: String
  hash_not_ends_with: String
  parentHash: String
  parentHash_not: String
  parentHash_in: [String!]
  parentHash_not_in: [String!]
  parentHash_lt: String
  parentHash_lte: String
  parentHash_gt: String
  parentHash_gte: String
  parentHash_contains: String
  parentHash_not_contains: String
  parentHash_starts_with: String
  parentHash_not_starts_with: String
  parentHash_ends_with: String
  parentHash_not_ends_with: String
  baseFeePerGas: Int
  baseFeePerGas_not: Int
  baseFeePerGas_in: [Int!]
  baseFeePerGas_not_in: [Int!]
  baseFeePerGas_lt: Int
  baseFeePerGas_lte: Int
  baseFeePerGas_gt: Int
  baseFeePerGas_gte: Int
  nonce: String
  nonce_not: String
  nonce_in: [String!]
  nonce_not_in: [String!]
  nonce_lt: String
  nonce_lte: String
  nonce_gt: String
  nonce_gte: String
  nonce_contains: String
  nonce_not_contains: String
  nonce_starts_with: String
  nonce_not_starts_with: String
  nonce_ends_with: String
  nonce_not_ends_with: String
  sha3Uncles: String
  sha3Uncles_not: String
  sha3Uncles_in: [String!]
  sha3Uncles_not_in: [String!]
  sha3Uncles_lt: String
  sha3Uncles_lte: String
  sha3Uncles_gt: String
  sha3Uncles_gte: String
  sha3Uncles_contains: String
  sha3Uncles_not_contains: String
  sha3Uncles_starts_with: String
  sha3Uncles_not_starts_with: String
  sha3Uncles_ends_with: String
  sha3Uncles_not_ends_with: String
  logsBloom: String
  logsBloom_not: String
  logsBloom_in: [String!]
  logsBloom_not_in: [String!]
  logsBloom_lt: String
  logsBloom_lte: String
  logsBloom_gt: String
  logsBloom_gte: String
  logsBloom_contains: String
  logsBloom_not_contains: String
  logsBloom_starts_with: String
  logsBloom_not_starts_with: String
  logsBloom_ends_with: String
  logsBloom_not_ends_with: String
  transactionRoot: String
  transactionRoot_not: String
  transactionRoot_in: [String!]
  transactionRoot_not_in: [String!]
  transactionRoot_lt: String
  transactionRoot_lte: String
  transactionRoot_gt: String
  transactionRoot_gte: String
  transactionRoot_contains: String
  transactionRoot_not_contains: String
  transactionRoot_starts_with: String
  transactionRoot_not_starts_with: String
  transactionRoot_ends_with: String
  transactionRoot_not_ends_with: String
  stateRoot: String
  stateRoot_not: String
  stateRoot_in: [String!]
  stateRoot_not_in: [String!]
  stateRoot_lt: String
  stateRoot_lte: String
  stateRoot_gt: String
  stateRoot_gte: String
  stateRoot_contains: String
  stateRoot_not_contains: String
  stateRoot_starts_with: String
  stateRoot_not_starts_with: String
  stateRoot_ends_with: String
  stateRoot_not_ends_with: String
  miner: String
  miner_not: String
  miner_in: [String!]
  miner_not_in: [String!]
  miner_lt: String
  miner_lte: String
  miner_gt: String
  miner_gte: String
  miner_contains: String
  miner_not_contains: String
  miner_starts_with: String
  miner_not_starts_with: String
  miner_ends_with: String
  miner_not_ends_with: String
  difficulty: String
  difficulty_not: String
  difficulty_in: [String!]
  difficulty_not_in: [String!]
  difficulty_lt: String
  difficulty_lte: String
  difficulty_gt: String
  difficulty_gte: String
  difficulty_contains: String
  difficulty_not_contains: String
  difficulty_starts_with: String
  difficulty_not_starts_with: String
  difficulty_ends_with: String
  difficulty_not_ends_with: String
  totalDifficulty: String
  totalDifficulty_not: String
  totalDifficulty_in: [String!]
  totalDifficulty_not_in: [String!]
  totalDifficulty_lt: String
  totalDifficulty_lte: String
  totalDifficulty_gt: String
  totalDifficulty_gte: String
  totalDifficulty_contains: String
  totalDifficulty_not_contains: String
  totalDifficulty_starts_with: String
  totalDifficulty_not_starts_with: String
  totalDifficulty_ends_with: String
  totalDifficulty_not_ends_with: String
  extraData: String
  extraData_not: String
  extraData_in: [String!]
  extraData_not_in: [String!]
  extraData_lt: String
  extraData_lte: String
  extraData_gt: String
  extraData_gte: String
  extraData_contains: String
  extraData_not_contains: String
  extraData_starts_with: String
  extraData_not_starts_with: String
  extraData_ends_with: String
  extraData_not_ends_with: String
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  gasLimit: Int
  gasLimit_not: Int
  gasLimit_in: [Int!]
  gasLimit_not_in: [Int!]
  gasLimit_lt: Int
  gasLimit_lte: Int
  gasLimit_gt: Int
  gasLimit_gte: Int
  gasUsed: Int
  gasUsed_not: Int
  gasUsed_in: [Int!]
  gasUsed_not_in: [Int!]
  gasUsed_lt: Int
  gasUsed_lte: Int
  gasUsed_gt: Int
  gasUsed_gte: Int
  timestamp: Int
  timestamp_not: Int
  timestamp_in: [Int!]
  timestamp_not_in: [Int!]
  timestamp_lt: Int
  timestamp_lte: Int
  timestamp_gt: Int
  timestamp_gte: Int
  transactions_every: TransactionWhereInput
  transactions_some: TransactionWhereInput
  transactions_none: TransactionWhereInput
  AND: [BlockWhereInput!]
  OR: [BlockWhereInput!]
  NOT: [BlockWhereInput!]
}

input BlockWhereUniqueInput {
  id: ID
  hash: String
  parentHash: String
}

scalar Long

type Mutation {
  createBlock(data: BlockCreateInput!): Block!
  updateBlock(data: BlockUpdateInput!, where: BlockWhereUniqueInput!): Block
  updateManyBlocks(data: BlockUpdateManyMutationInput!, where: BlockWhereInput): BatchPayload!
  upsertBlock(where: BlockWhereUniqueInput!, create: BlockCreateInput!, update: BlockUpdateInput!): Block!
  deleteBlock(where: BlockWhereUniqueInput!): Block
  deleteManyBlocks(where: BlockWhereInput): BatchPayload!
  createTransaction(data: TransactionCreateInput!): Transaction!
  updateTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction
  updateManyTransactions(data: TransactionUpdateManyMutationInput!, where: TransactionWhereInput): BatchPayload!
  upsertTransaction(where: TransactionWhereUniqueInput!, create: TransactionCreateInput!, update: TransactionUpdateInput!): Transaction!
  deleteTransaction(where: TransactionWhereUniqueInput!): Transaction
  deleteManyTransactions(where: TransactionWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  block(where: BlockWhereUniqueInput!): Block
  blocks(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Block]!
  blocksConnection(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BlockConnection!
  transaction(where: TransactionWhereUniqueInput!): Transaction
  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction]!
  transactionsConnection(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionConnection!
  node(id: ID!): Node
}

type Subscription {
  block(where: BlockSubscriptionWhereInput): BlockSubscriptionPayload
  transaction(where: TransactionSubscriptionWhereInput): TransactionSubscriptionPayload
}

type Transaction {
  id: ID!
  hash: String!
  nonce: Int!
  blockHash: String!
  blockNumber: Int!
  transactionIndex: Int!
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

type TransactionConnection {
  pageInfo: PageInfo!
  edges: [TransactionEdge]!
  aggregate: AggregateTransaction!
}

input TransactionCreateInput {
  id: ID
  hash: String!
  nonce: Int!
  blockHash: String!
  blockNumber: Int!
  transactionIndex: Int!
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionCreateManyInput {
  create: [TransactionCreateInput!]
  connect: [TransactionWhereUniqueInput!]
}

type TransactionEdge {
  node: Transaction!
  cursor: String!
}

enum TransactionOrderByInput {
  id_ASC
  id_DESC
  hash_ASC
  hash_DESC
  nonce_ASC
  nonce_DESC
  blockHash_ASC
  blockHash_DESC
  blockNumber_ASC
  blockNumber_DESC
  transactionIndex_ASC
  transactionIndex_DESC
  from_ASC
  from_DESC
  to_ASC
  to_DESC
  value_ASC
  value_DESC
  gasPrice_ASC
  gasPrice_DESC
  gas_ASC
  gas_DESC
  input_ASC
  input_DESC
}

type TransactionPreviousValues {
  id: ID!
  hash: String!
  nonce: Int!
  blockHash: String!
  blockNumber: Int!
  transactionIndex: Int!
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  hash: String
  hash_not: String
  hash_in: [String!]
  hash_not_in: [String!]
  hash_lt: String
  hash_lte: String
  hash_gt: String
  hash_gte: String
  hash_contains: String
  hash_not_contains: String
  hash_starts_with: String
  hash_not_starts_with: String
  hash_ends_with: String
  hash_not_ends_with: String
  nonce: Int
  nonce_not: Int
  nonce_in: [Int!]
  nonce_not_in: [Int!]
  nonce_lt: Int
  nonce_lte: Int
  nonce_gt: Int
  nonce_gte: Int
  blockHash: String
  blockHash_not: String
  blockHash_in: [String!]
  blockHash_not_in: [String!]
  blockHash_lt: String
  blockHash_lte: String
  blockHash_gt: String
  blockHash_gte: String
  blockHash_contains: String
  blockHash_not_contains: String
  blockHash_starts_with: String
  blockHash_not_starts_with: String
  blockHash_ends_with: String
  blockHash_not_ends_with: String
  blockNumber: Int
  blockNumber_not: Int
  blockNumber_in: [Int!]
  blockNumber_not_in: [Int!]
  blockNumber_lt: Int
  blockNumber_lte: Int
  blockNumber_gt: Int
  blockNumber_gte: Int
  transactionIndex: Int
  transactionIndex_not: Int
  transactionIndex_in: [Int!]
  transactionIndex_not_in: [Int!]
  transactionIndex_lt: Int
  transactionIndex_lte: Int
  transactionIndex_gt: Int
  transactionIndex_gte: Int
  from: String
  from_not: String
  from_in: [String!]
  from_not_in: [String!]
  from_lt: String
  from_lte: String
  from_gt: String
  from_gte: String
  from_contains: String
  from_not_contains: String
  from_starts_with: String
  from_not_starts_with: String
  from_ends_with: String
  from_not_ends_with: String
  to: String
  to_not: String
  to_in: [String!]
  to_not_in: [String!]
  to_lt: String
  to_lte: String
  to_gt: String
  to_gte: String
  to_contains: String
  to_not_contains: String
  to_starts_with: String
  to_not_starts_with: String
  to_ends_with: String
  to_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  gasPrice: String
  gasPrice_not: String
  gasPrice_in: [String!]
  gasPrice_not_in: [String!]
  gasPrice_lt: String
  gasPrice_lte: String
  gasPrice_gt: String
  gasPrice_gte: String
  gasPrice_contains: String
  gasPrice_not_contains: String
  gasPrice_starts_with: String
  gasPrice_not_starts_with: String
  gasPrice_ends_with: String
  gasPrice_not_ends_with: String
  gas: Int
  gas_not: Int
  gas_in: [Int!]
  gas_not_in: [Int!]
  gas_lt: Int
  gas_lte: Int
  gas_gt: Int
  gas_gte: Int
  input: String
  input_not: String
  input_in: [String!]
  input_not_in: [String!]
  input_lt: String
  input_lte: String
  input_gt: String
  input_gte: String
  input_contains: String
  input_not_contains: String
  input_starts_with: String
  input_not_starts_with: String
  input_ends_with: String
  input_not_ends_with: String
  AND: [TransactionScalarWhereInput!]
  OR: [TransactionScalarWhereInput!]
  NOT: [TransactionScalarWhereInput!]
}

type TransactionSubscriptionPayload {
  mutation: MutationType!
  node: Transaction
  updatedFields: [String!]
  previousValues: TransactionPreviousValues
}

input TransactionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TransactionWhereInput
  AND: [TransactionSubscriptionWhereInput!]
  OR: [TransactionSubscriptionWhereInput!]
  NOT: [TransactionSubscriptionWhereInput!]
}

input TransactionUpdateDataInput {
  hash: String
  nonce: Int
  blockHash: String
  blockNumber: Int
  transactionIndex: Int
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionUpdateInput {
  hash: String
  nonce: Int
  blockHash: String
  blockNumber: Int
  transactionIndex: Int
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionUpdateManyDataInput {
  hash: String
  nonce: Int
  blockHash: String
  blockNumber: Int
  transactionIndex: Int
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionUpdateManyInput {
  create: [TransactionCreateInput!]
  update: [TransactionUpdateWithWhereUniqueNestedInput!]
  upsert: [TransactionUpsertWithWhereUniqueNestedInput!]
  delete: [TransactionWhereUniqueInput!]
  connect: [TransactionWhereUniqueInput!]
  set: [TransactionWhereUniqueInput!]
  disconnect: [TransactionWhereUniqueInput!]
  deleteMany: [TransactionScalarWhereInput!]
  updateMany: [TransactionUpdateManyWithWhereNestedInput!]
}

input TransactionUpdateManyMutationInput {
  hash: String
  nonce: Int
  blockHash: String
  blockNumber: Int
  transactionIndex: Int
  from: String
  to: String
  value: String
  gasPrice: String
  gas: Int
  input: String
}

input TransactionUpdateManyWithWhereNestedInput {
  where: TransactionScalarWhereInput!
  data: TransactionUpdateManyDataInput!
}

input TransactionUpdateWithWhereUniqueNestedInput {
  where: TransactionWhereUniqueInput!
  data: TransactionUpdateDataInput!
}

input TransactionUpsertWithWhereUniqueNestedInput {
  where: TransactionWhereUniqueInput!
  update: TransactionUpdateDataInput!
  create: TransactionCreateInput!
}

input TransactionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  hash: String
  hash_not: String
  hash_in: [String!]
  hash_not_in: [String!]
  hash_lt: String
  hash_lte: String
  hash_gt: String
  hash_gte: String
  hash_contains: String
  hash_not_contains: String
  hash_starts_with: String
  hash_not_starts_with: String
  hash_ends_with: String
  hash_not_ends_with: String
  nonce: Int
  nonce_not: Int
  nonce_in: [Int!]
  nonce_not_in: [Int!]
  nonce_lt: Int
  nonce_lte: Int
  nonce_gt: Int
  nonce_gte: Int
  blockHash: String
  blockHash_not: String
  blockHash_in: [String!]
  blockHash_not_in: [String!]
  blockHash_lt: String
  blockHash_lte: String
  blockHash_gt: String
  blockHash_gte: String
  blockHash_contains: String
  blockHash_not_contains: String
  blockHash_starts_with: String
  blockHash_not_starts_with: String
  blockHash_ends_with: String
  blockHash_not_ends_with: String
  blockNumber: Int
  blockNumber_not: Int
  blockNumber_in: [Int!]
  blockNumber_not_in: [Int!]
  blockNumber_lt: Int
  blockNumber_lte: Int
  blockNumber_gt: Int
  blockNumber_gte: Int
  transactionIndex: Int
  transactionIndex_not: Int
  transactionIndex_in: [Int!]
  transactionIndex_not_in: [Int!]
  transactionIndex_lt: Int
  transactionIndex_lte: Int
  transactionIndex_gt: Int
  transactionIndex_gte: Int
  from: String
  from_not: String
  from_in: [String!]
  from_not_in: [String!]
  from_lt: String
  from_lte: String
  from_gt: String
  from_gte: String
  from_contains: String
  from_not_contains: String
  from_starts_with: String
  from_not_starts_with: String
  from_ends_with: String
  from_not_ends_with: String
  to: String
  to_not: String
  to_in: [String!]
  to_not_in: [String!]
  to_lt: String
  to_lte: String
  to_gt: String
  to_gte: String
  to_contains: String
  to_not_contains: String
  to_starts_with: String
  to_not_starts_with: String
  to_ends_with: String
  to_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  gasPrice: String
  gasPrice_not: String
  gasPrice_in: [String!]
  gasPrice_not_in: [String!]
  gasPrice_lt: String
  gasPrice_lte: String
  gasPrice_gt: String
  gasPrice_gte: String
  gasPrice_contains: String
  gasPrice_not_contains: String
  gasPrice_starts_with: String
  gasPrice_not_starts_with: String
  gasPrice_ends_with: String
  gasPrice_not_ends_with: String
  gas: Int
  gas_not: Int
  gas_in: [Int!]
  gas_not_in: [Int!]
  gas_lt: Int
  gas_lte: Int
  gas_gt: Int
  gas_gte: Int
  input: String
  input_not: String
  input_in: [String!]
  input_not_in: [String!]
  input_lt: String
  input_lte: String
  input_gt: String
  input_gte: String
  input_contains: String
  input_not_contains: String
  input_starts_with: String
  input_not_starts_with: String
  input_ends_with: String
  input_not_ends_with: String
  AND: [TransactionWhereInput!]
  OR: [TransactionWhereInput!]
  NOT: [TransactionWhereInput!]
}

input TransactionWhereUniqueInput {
  id: ID
}
`
      }
    